(()=>{const e=function(){},t="function"==typeof Buffer?Buffer:e,n="function"==typeof Blob?Blob:e,r="function"==typeof DataView?DataView:e,o=new Set([ArrayBuffer,BigInt,n,Boolean,t,r,Date,Error,Int8Array,Int16Array,Int32Array,Map,Number,RegExp,Set,String,Uint8Array,Uint16Array,Uint32Array]),a=new Set([Boolean,Error,Number,Promise,String,Symbol,WeakMap,WeakSet]),f=(e,i={},s=new WeakMap)=>{const c=typeof e,{nonStandard:y,nonEnumerable:u}=i;if(!e||"object"!==c||a.has(e.constructor)||"function"===c||"undefined"===c)return e&&"object"===c&&s.set(e,e),e;let p=s.get(e);if(p)return p;if(o.has(e.constructor)){if(p=e instanceof t?t.from(e):e instanceof ArrayBuffer?e.slice(0):e instanceof n?new n([e],{type:e.type,endings:e.endings}):e instanceof r?new r(f(e.buffer,i,s),e.byteOffset,e.byteLength):new e.constructor(e),s.set(e,p),p instanceof Set||p instanceof Map)for(const[e,t]of[...p.entries()])p instanceof Set?(p.delete(e),p.add(f(e,i,s))):p instanceof Map&&(p.delete(e),p.set(f(e,i,s),f(t,i,s)));if(y)for(const t in e)isNaN(parseInt(t))&&(p[t]=e[t])}else if(Array.isArray(e)&&!y)p=e.map(e=>f(e,i,s));else{if(e.constructor.from&&!Array.isArray(e))try{return p=e.constructor.from(e),p}catch(e){}p=Array.isArray(e)?new e.constructor:Object.create(Object.getPrototypeOf(e)),s.set(e,p);for(const t in e){const n=e[t];p[t]=f(n,i,s)}}return p};"undefined"!=typeof module&&(module.exports=f,f.nanoCopy=f),"undefined"!=typeof globalThis&&(globalThis.nanoCopy=f)})();
